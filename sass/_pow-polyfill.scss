//
// By drtimofey, script based on script by davidkpiano, see these links:
// https://github.com/thoughtbot/bitters/issues/167
// https://github.com/thoughtbot/bourbon/issues/717
// https://gist.github.com/davidkpiano/ad6e6771df050ff3727f
//

@function math-pow-polyfill($number, $exp) {
  @if (round($exp) != $exp) {
    @return math-exp($exp * math-ln($number));
  }

  // Traditional method for integers
  $value: 1;

  @if $exp > 0 {
    @for $i from 1 through $exp {
      $value: $value * $number;
    }
  }
  @else if $exp < 0 {
    @for $i from 1 through -$exp {
      $value: $value / $number;
    }
  }

  @return $value;
}

@function math-factorial($value) {
  @if $value == 0 {
    @return 1;
  }

  $result: 1;

  @for $index from 1 through $value {
    $result: $result * $index;
  }

  @return $result;
}

@function math-exp($value) {
  $result: 0;

  @for $index from 0 to 100 {
    $result: $result + math-pow-polyfill($value, $index) / math-factorial($index);
  }

  @return $result;
}

@function math-ln($value) {
  $ten-exp: 1;
  $ln-ten: 2.30258509;

  @while ($value > math-pow-polyfill(10, $ten-exp)) {
    $ten-exp: $ten-exp + 1;
  }

  $value: $value / math-pow-polyfill(10, $ten-exp);

  $result: 0;

  @for $index from 1 to 100 {
    $result: $result + (math-pow-polyfill(-1, $index + 1) / $index) * (math-pow-polyfill($value - 1, $index));
  }

  @return $result + $ten-exp * $ln-ten;
}
